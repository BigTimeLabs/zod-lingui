name: Build & publish
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ---------- Checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # https://www.npmjs.com/package/semantic-release
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git

      # ---------- Setup build environment
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      # ---------- Setup PNPM and install dependencies
      # - name: Get pnpm store directory
      #   id: pnpm-cache
      #   run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      #   shell: bash

      # - name: Setup pnpm cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pnpm-store-

      # - name: Install Dependencies
      #   run: pnpm install --no-frozen-lockfile
      #   shell: bash

      # # ---------- Tag this version and export it as env variable
      # - name: Semantic version
      #   run: npx semantic-release
      #   shell: bash

      # # ---------- Run all unit & integration tests with coverage
      # - name: Test and coverage
      #   run: pnpm test:unit --coverage
      #   shell: bash

      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

      # # ---------- Build
      # - name: Build
      #   run: pnpm build:prod
      #   shell: bash


